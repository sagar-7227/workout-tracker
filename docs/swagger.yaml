basePath: /api
definitions:
  controllers.CreateWorkoutReq:
    properties:
      exercises:
        items:
          $ref: '#/definitions/controllers.WorkoutExerciseDTO'
        minItems: 1
        type: array
      notes:
        type: string
      scheduled_at:
        type: string
      title:
        minLength: 2
        type: string
    required:
    - exercises
    - title
    type: object
  controllers.UpdateWorkoutReq:
    properties:
      exercises:
        items:
          $ref: '#/definitions/controllers.WorkoutExerciseDTO'
        type: array
      notes:
        type: string
      scheduled_at:
        type: string
      title:
        type: string
    type: object
  controllers.WorkoutExerciseDTO:
    properties:
      exercise_id:
        type: string
      repetitions:
        minimum: 1
        type: integer
      sets:
        minimum: 1
        type: integer
      weight:
        type: number
    required:
    - exercise_id
    - repetitions
    - sets
    type: object
  controllers.loginReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.signupReq:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Workout:
    properties:
      created_at:
        type: string
      exercises:
        items:
          $ref: '#/definitions/models.WorkoutExercise'
        type: array
      id:
        type: string
      notes:
        type: string
      scheduled_at:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.WorkoutExercise:
    properties:
      exercise_id:
        type: string
      id:
        type: string
      repetitions:
        type: integer
      sets:
        type: integer
      weight:
        type: number
      workout_id:
        type: string
    type: object
info:
  contact: {}
  description: REST API for managing workouts, exercises, and reports.
  title: Workout Tracker API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.loginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.signupReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Sign up
      tags:
      - Auth
  /exercises:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
      security:
      - BearerAuth: []
      summary: List exercises
      tags:
      - Exercises
  /reports:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Workout report summary
      tags:
      - Reports
  /workouts:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Workout'
            type: array
      security:
      - BearerAuth: []
      summary: List workouts (sorted by scheduled_at asc, nulls last)
      tags:
      - Workouts
    post:
      consumes:
      - application/json
      parameters:
      - description: Workout
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateWorkoutReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Workout'
      security:
      - BearerAuth: []
      summary: Create workout
      tags:
      - Workouts
  /workouts/{id}:
    delete:
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Delete workout
      tags:
      - Workouts
    get:
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Workout'
      security:
      - BearerAuth: []
      summary: Get workout by ID
      tags:
      - Workouts
    put:
      consumes:
      - application/json
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: string
      - description: Update
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateWorkoutReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Workout'
      security:
      - BearerAuth: []
      summary: Update workout
      tags:
      - Workouts
securityDefinitions:
  BearerAuth:
    description: 'Use format: Bearer {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
